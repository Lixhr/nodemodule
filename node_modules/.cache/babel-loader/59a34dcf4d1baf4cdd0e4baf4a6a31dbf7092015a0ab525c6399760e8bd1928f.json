{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pro\\\\Desktop\\\\cours HTML CSS\\\\sitr b2B\\\\shop\\\\src\\\\Panier\\\\Formulaire\\\\Formulaire.js\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport './Formulaire.css';\nimport icoFleche from './ico/flecheretour.png';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n// const schema = yup.object().shape({\n//     prenom: yup.string()\n//     .required('Veuillez fournir votre prénom.')\n//     .min(2, 'Le prénom doit comporter au moins 2 caractères.')\n//     .matches(/[aeiouyAEIOUY]/, 'Le prénom doit contenir au moins une voyelle.')\n//     .notOneOf([  'firstname',\n//     'lastname',\n//     'unknown',\n//     'first_name',\n//     'last_name',\n//     'anonyme',\n//     'user',\n//     'admin',\n//     'name',\n//     'nom',\n//     'prénom',\n//     'test',], 'Cette valeur est interdite.')\n//     .matches(/^[a-zA-Zéèêàâûù:'\\-ç]+$/, 'Le prénom contient des caractères non autorisés.')\n//     .matches(/^(?!.*(.)\\1{2}).*$/, 'La saisie contient des caractères répétitifs.')\n//     .test('not-equal', 'Le prénom ne peut pas être identique au nom.', function(value) {\n//         return value !== this.parent.nom;\n//       }),\n\n//       nom: yup.string()\n//       .required('Veuillez fournir votre prénom.')\n//       .min(2, 'Le prénom doit comporter au moins 2 caractères.')\n//       .matches(/[aeiouyAEIOUY]/, 'Le prénom doit contenir au moins une voyelle.')\n//       .notOneOf([  'firstname',\n//       'lastname',\n//       'unknown',\n//       'first_name',\n//       'last_name',\n//       'anonyme',\n//       'user',\n//       'admin',\n//       'name',\n//       'nom',\n//       'prénom',\n//       'test',], 'Cette valeur est interdite.')\n//       .matches(/^[a-zA-Zéèêàâûù:'\\-ç]+$/, 'Le prénom contient des caractères non autorisés.')\n//       .matches(/^(?!.*(.)\\1{2}).*$/, 'La saisie contient des caractères répétitifs.')\n//       .test('not-equal', 'Le prénom ne peut pas être identique au nom.', function(value) {\n//           return value !== this.parent.prenom;\n//         }),\n\n//     email: yup.string()\n//         .required('Veuillez fournir une adresse email.')\n//         .email('Veuillez fournir une adresse email valide.'),\n\n//     adresse: yup.string()\n//         .required('Veuillez fournir une adresse.'),\n\n//     zip: yup.number()\n//         .required('Veuillez fournir un code postal.')       \n//         .typeError('Veuillez fournir un nombre.'),\n\n//     ville: yup.string()\n//         .required('Veuillez fournir une ville.')       \n\n// });\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Formulaire() {\n  _s();\n  const [state, setState] = useState({\n    address: '',\n    city: '',\n    postcode: '',\n    error: null\n  });\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.get(`https://api.laposte.fr/datalab/v1/adresse?q=${this.state.address}&type=${this.state.type}&limit=${this.state.limit}`, {\n        headers: {\n          'X-Okapi-Key': 'your_api_key_here',\n          'Accept': 'application/json'\n        }\n      });\n      const data = response.data;\n      const results = data.adresses;\n      if (results.length > 0) {\n        const firstResult = results[0];\n        const city = firstResult.localite;\n        const postcode = firstResult.codePostal;\n        this.setState({\n          city,\n          postcode,\n          error: null\n        });\n      } else {\n        this.setState({\n          error: 'No results found'\n        });\n      }\n    } catch (error) {\n      this.setState({\n        error: 'An error occurred'\n      });\n    }\n  };\n\n  // const { register, handleSubmit, formState: { errors } } = useForm({\n  //   resolver: yupResolver(schema),\n  // });\n\n  // const onSubmit = (data) => {\n  //   console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"div_form\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(Formulaire, \"8Pk0v9pNnIZEiU88iW+iGiz1inQ=\");\n_c = Formulaire;\nexport default Formulaire;\nvar _c;\n$RefreshReg$(_c, \"Formulaire\");","map":{"version":3,"names":["useForm","useState","yupResolver","yup","icoFleche","Link","axios","jsxDEV","_jsxDEV","Formulaire","_s","state","setState","address","city","postcode","error","handleSubmit","event","preventDefault","response","get","type","limit","headers","data","results","adresses","length","firstResult","localite","codePostal","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Pro/Desktop/cours HTML CSS/sitr b2B/shop/src/Panier/Formulaire/Formulaire.js"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport { useState } from \"react\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport './Formulaire.css';\r\nimport icoFleche from './ico/flecheretour.png';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\n// const schema = yup.object().shape({\r\n//     prenom: yup.string()\r\n//     .required('Veuillez fournir votre prénom.')\r\n//     .min(2, 'Le prénom doit comporter au moins 2 caractères.')\r\n//     .matches(/[aeiouyAEIOUY]/, 'Le prénom doit contenir au moins une voyelle.')\r\n//     .notOneOf([  'firstname',\r\n//     'lastname',\r\n//     'unknown',\r\n//     'first_name',\r\n//     'last_name',\r\n//     'anonyme',\r\n//     'user',\r\n//     'admin',\r\n//     'name',\r\n//     'nom',\r\n//     'prénom',\r\n//     'test',], 'Cette valeur est interdite.')\r\n//     .matches(/^[a-zA-Zéèêàâûù:'\\-ç]+$/, 'Le prénom contient des caractères non autorisés.')\r\n//     .matches(/^(?!.*(.)\\1{2}).*$/, 'La saisie contient des caractères répétitifs.')\r\n//     .test('not-equal', 'Le prénom ne peut pas être identique au nom.', function(value) {\r\n//         return value !== this.parent.nom;\r\n//       }),\r\n\r\n\r\n\r\n//       nom: yup.string()\r\n//       .required('Veuillez fournir votre prénom.')\r\n//       .min(2, 'Le prénom doit comporter au moins 2 caractères.')\r\n//       .matches(/[aeiouyAEIOUY]/, 'Le prénom doit contenir au moins une voyelle.')\r\n//       .notOneOf([  'firstname',\r\n//       'lastname',\r\n//       'unknown',\r\n//       'first_name',\r\n//       'last_name',\r\n//       'anonyme',\r\n//       'user',\r\n//       'admin',\r\n//       'name',\r\n//       'nom',\r\n//       'prénom',\r\n//       'test',], 'Cette valeur est interdite.')\r\n//       .matches(/^[a-zA-Zéèêàâûù:'\\-ç]+$/, 'Le prénom contient des caractères non autorisés.')\r\n//       .matches(/^(?!.*(.)\\1{2}).*$/, 'La saisie contient des caractères répétitifs.')\r\n//       .test('not-equal', 'Le prénom ne peut pas être identique au nom.', function(value) {\r\n//           return value !== this.parent.prenom;\r\n//         }),\r\n\r\n\r\n//     email: yup.string()\r\n//         .required('Veuillez fournir une adresse email.')\r\n//         .email('Veuillez fournir une adresse email valide.'),\r\n\r\n//     adresse: yup.string()\r\n//         .required('Veuillez fournir une adresse.'),\r\n    \r\n//     zip: yup.number()\r\n//         .required('Veuillez fournir un code postal.')       \r\n//         .typeError('Veuillez fournir un nombre.'),\r\n    \r\n//     ville: yup.string()\r\n//         .required('Veuillez fournir une ville.')       \r\n        \r\n\r\n\r\n// });\r\n\r\n\r\n\r\n\r\nfunction Formulaire() {\r\n  const [state, setState] = useState({\r\n    address: '',\r\n    city: '',\r\n    postcode: '',\r\n    error: null\r\n  });\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.get(`https://api.laposte.fr/datalab/v1/adresse?q=${this.state.address}&type=${this.state.type}&limit=${this.state.limit}`, {\r\n        headers: {\r\n          'X-Okapi-Key': 'your_api_key_here',\r\n          'Accept': 'application/json'\r\n        }\r\n      });\r\n\r\n      const data = response.data;\r\n      const results = data.adresses;\r\n\r\n      if (results.length > 0) {\r\n        const firstResult = results[0];\r\n        const city = firstResult.localite;\r\n        const postcode = firstResult.codePostal;\r\n        this.setState({ city, postcode, error: null });\r\n      } else {\r\n        this.setState({ error: 'No results found' });\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: 'An error occurred' });\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // const { register, handleSubmit, formState: { errors } } = useForm({\r\n  //   resolver: yupResolver(schema),\r\n  // });\r\n\r\n  // const onSubmit = (data) => {\r\n  //   console.log(data);\r\n \r\n\r\n  return (\r\n    <div className='div_form'>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    {/* <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n    <Link to='/panier'><img src={icoFleche} className=\"icoFleche\"></img></Link>\r\n    <span className=\"titre_infos\">Vos infos</span>\r\n      <span className=\"paireForm\">\r\n      <input {...register(\"prenom\")} placeholder=\"Prénom\" />\r\n      {errors.prenom && <span>{errors.prenom.message}</span>}\r\n\r\n\r\n      <input className=\"paire\" {...register(\"nom\")} placeholder=\"Nom\" />\r\n      {errors.nom && <span>{errors.nom.message}</span>}\r\n      </span>\r\n      <input {...register(\"email\")} placeholder=\"Email\" />\r\n      {errors.email && <span>{errors.email.message}</span>} */}\r\n\r\n\r\n      {/* <input {...register(\"adresse\")} placeholder=\"Adresse\" />\r\n      {errors.adresse && <span>{errors.adresse.message}</span>}\r\n    <span className=\"paireForm\">\r\n      <input {...register(\"zip\")} placeholder=\"Code postal\" />\r\n      {errors.zip && <span>{errors.zip.message}</span>}\r\n\r\n      <input className=\"paire\" {...register(\"ville\")} placeholder=\"Ville\" />\r\n      {errors.ville && <span>{errors.ville.message}</span>}\r\n    </span> */}\r\n\r\n    {/* <input  disabled=\"disabled\" placeholder=\"France only !\" />\r\n      \r\n\r\n\r\n      <input className=\"btnValider\" type=\"submit\" value='valider' />\r\n    </form> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Formulaire;"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,yBAAyB;AACrD,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAO,kBAAkB;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;;AAGzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAIA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKA,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC;IACjCY,OAAO,EAAE,EAAE;IACXC,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAG,MAAMC,KAAK,IAAI;IAClCA,KAAK,CAACC,cAAc,EAAE;IAEtB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,+CAA8C,IAAI,CAACV,KAAK,CAACE,OAAQ,SAAQ,IAAI,CAACF,KAAK,CAACW,IAAK,UAAS,IAAI,CAACX,KAAK,CAACY,KAAM,EAAC,EAAE;QACtJC,OAAO,EAAE;UACP,aAAa,EAAE,mBAAmB;UAClC,QAAQ,EAAE;QACZ;MACF,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAGL,QAAQ,CAACK,IAAI;MAC1B,MAAMC,OAAO,GAAGD,IAAI,CAACE,QAAQ;MAE7B,IAAID,OAAO,CAACE,MAAM,GAAG,CAAC,EAAE;QACtB,MAAMC,WAAW,GAAGH,OAAO,CAAC,CAAC,CAAC;QAC9B,MAAMZ,IAAI,GAAGe,WAAW,CAACC,QAAQ;QACjC,MAAMf,QAAQ,GAAGc,WAAW,CAACE,UAAU;QACvC,IAAI,CAACnB,QAAQ,CAAC;UAAEE,IAAI;UAAEC,QAAQ;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC;MAChD,CAAC,MAAM;QACL,IAAI,CAACJ,QAAQ,CAAC;UAAEI,KAAK,EAAE;QAAmB,CAAC,CAAC;MAC9C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACd,IAAI,CAACJ,QAAQ,CAAC;QAAEI,KAAK,EAAE;MAAoB,CAAC,CAAC;IAC/C;EACF,CAAC;;EAaD;EACA;EACA;;EAEA;EACA;;EAGA,oBACER,OAAA;IAAKwB,SAAS,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAiDnB;AAEV;AAAC1B,EAAA,CA1GQD,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AA4GnB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}