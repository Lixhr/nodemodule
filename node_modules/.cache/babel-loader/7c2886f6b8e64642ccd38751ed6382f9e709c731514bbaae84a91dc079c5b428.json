{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pro\\\\Desktop\\\\cours HTML CSS\\\\sitr b2B\\\\shop\\\\src\\\\Player\\\\Player.js\";\nimport React, { useState } from 'react';\nimport ReactPlayer from 'react-player/soundcloud';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Player(_ref) {\n  let {\n    url,\n    isPlaying,\n    setIsPlaying,\n    setShowPlayer\n  } = _ref;\n  if (isPlaying === false) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div_player\",\n      children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        url: url,\n        playing: true,\n        width: \"100%\",\n        height: \"10vw\",\n        onPlay: () => setIsPlaying(true),\n        onPause: () => {\n          setIsPlaying(false);\n          setShowPlayer(false); // cache le lecteur audio lorsque l'utilisateur met en pause\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","ReactPlayer","jsxDEV","_jsxDEV","Player","_ref","url","isPlaying","setIsPlaying","setShowPlayer","className","children","playing","width","height","onPlay","onPause","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Pro/Desktop/cours HTML CSS/sitr b2B/shop/src/Player/Player.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReactPlayer from 'react-player/soundcloud'\r\n\r\nfunction Player({ url, isPlaying, setIsPlaying, setShowPlayer }) {\r\n  if (isPlaying === false) {\r\n    return (\r\n      <div className=\"div_player\">\r\n        <ReactPlayer\r\n          url={url}\r\n          playing={true}\r\n          width=\"100%\"\r\n          height=\"10vw\"\r\n          onPlay={() => setIsPlaying(true)}\r\n          onPause={() => {\r\n            setIsPlaying(false);\r\n            setShowPlayer(false); // cache le lecteur audio lorsque l'utilisateur met en pause\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\nexport default Player;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,MAAMA,CAAAC,IAAA,EAAkD;EAAA,IAAjD;IAAEC,GAAG;IAAEC,SAAS;IAAEC,YAAY;IAAEC;EAAc,CAAC,GAAAJ,IAAA;EAC7D,IAAIE,SAAS,KAAK,KAAK,EAAE;IACvB,oBACEJ,OAAA;MAAKO,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzBR,OAAA,CAACF,WAAW;QACVK,GAAG,EAAEA,GAAI;QACTM,OAAO,EAAE,IAAK;QACdC,KAAK,EAAC,MAAM;QACZC,MAAM,EAAC,MAAM;QACbC,MAAM,EAAEA,CAAA,KAAMP,YAAY,CAAC,IAAI,CAAE;QACjCQ,OAAO,EAAEA,CAAA,KAAM;UACbR,YAAY,CAAC,KAAK,CAAC;UACnBC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;QACxB;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAEV,CAAC,MAAM;IACL,OAAO,IAAI;EACb;AACF;AAACC,EAAA,GApBQjB,MAAM;AAuBf,eAAeA,MAAM;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}