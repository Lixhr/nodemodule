{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pro\\\\Desktop\\\\cours HTML CSS\\\\sitr b2B\\\\shop\\\\src\\\\Panier\\\\Formulaire\\\\Formulaire.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Formulaire.css';\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Formulaire(_ref) {\n  _s();\n  let {\n    panier\n  } = _ref;\n  const physique = panier.find(physique => physique.type !== 'digital') !== undefined;\n  console.log(physique);\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = data => console.log(data);\n  console.log(watch(\"example\")); // watch input value by passing the name of it\n\n  return (\n    /*#__PURE__*/\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        defaultValue: \"test\",\n        ...register(\"example\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"exampleRequired\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  );\n}\n_s(Formulaire, \"77WzwRY2adCYNFA0cLnNubMUW6o=\", false, function () {\n  return [useForm];\n});\n_c = Formulaire;\nexport default Formulaire;\nvar _c;\n$RefreshReg$(_c, \"Formulaire\");","map":{"version":3,"names":["React","useState","useForm","jsxDEV","_jsxDEV","Formulaire","_ref","_s","panier","physique","find","type","undefined","console","log","register","handleSubmit","watch","formState","errors","onSubmit","data","children","defaultValue","fileName","_jsxFileName","lineNumber","columnNumber","required","exampleRequired","_c","$RefreshReg$"],"sources":["C:/Users/Pro/Desktop/cours HTML CSS/sitr b2B/shop/src/Panier/Formulaire/Formulaire.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Formulaire.css';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\n\r\n\r\nfunction Formulaire({panier}) {\r\n    const physique = panier.find(physique => physique.type !== 'digital') !== undefined;\r\n    console.log (physique );\r\n\r\n\r\n\r\n\r\n\r\n\r\n      \r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n    const onSubmit = data => console.log(data);\r\n  \r\n    console.log(watch(\"example\")); // watch input value by passing the name of it\r\n  \r\n    return (\r\n      /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {/* register your input into the hook by invoking the \"register\" function */}\r\n        <input defaultValue=\"test\" {...register(\"example\")} />\r\n        \r\n        {/* include validation with required or other standard HTML validation rules */}\r\n        <input {...register(\"exampleRequired\", { required: true })} />\r\n        {/* errors will return when field validation fails  */}\r\n        {errors.exampleRequired && <span>This field is required</span>}\r\n        \r\n        <input type=\"submit\" />\r\n      </form>\r\n    );\r\n    \r\n}\r\n\r\nexport default Formulaire;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK1C,SAASC,UAAUA,CAAAC,IAAA,EAAW;EAAAC,EAAA;EAAA,IAAV;IAACC;EAAM,CAAC,GAAAF,IAAA;EACxB,MAAMG,QAAQ,GAAGD,MAAM,CAACE,IAAI,CAACD,QAAQ,IAAIA,QAAQ,CAACE,IAAI,KAAK,SAAS,CAAC,KAAKC,SAAS;EACnFC,OAAO,CAACC,GAAG,CAAEL,QAAQ,CAAE;EAQvB,MAAM;IAAEM,QAAQ;IAAEC,YAAY;IAAEC,KAAK;IAAEC,SAAS,EAAE;MAAEC;IAAO;EAAE,CAAC,GAAGjB,OAAO,EAAE;EAC1E,MAAMkB,QAAQ,GAAGC,IAAI,IAAIR,OAAO,CAACC,GAAG,CAACO,IAAI,CAAC;EAE1CR,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE/B;IAAA;IACE;IACAb,OAAA;MAAMgB,QAAQ,EAAEJ,YAAY,CAACI,QAAQ,CAAE;MAAAE,QAAA,gBAErClB,OAAA;QAAOmB,YAAY,EAAC,MAAM;QAAA,GAAKR,QAAQ,CAAC,SAAS;MAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAGtDvB,OAAA;QAAA,GAAWW,QAAQ,CAAC,iBAAiB,EAAE;UAAEa,QAAQ,EAAE;QAAK,CAAC;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,EAE7DR,MAAM,CAACU,eAAe,iBAAIzB,OAAA;QAAAkB,QAAA,EAAM;MAAsB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eAE9DvB,OAAA;QAAOO,IAAI,EAAC;MAAQ;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAClB;AAGb;AAACpB,EAAA,CA9BQF,UAAU;EAAA,QAUkDH,OAAO;AAAA;AAAA4B,EAAA,GAVnEzB,UAAU;AAgCnB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}