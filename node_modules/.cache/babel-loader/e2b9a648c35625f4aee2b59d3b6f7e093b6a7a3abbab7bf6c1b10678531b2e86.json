{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pro\\\\Desktop\\\\cours HTML CSS\\\\sitr b2B\\\\shop\\\\src\\\\Sons\\\\Afficher_sons.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\n// import ReactPlayer from 'react-player/soundcloud'\nimport listeSons from './/listeSons.json';\nimport \".//Afficher_sons.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction trier(sons, genre) {\n  return sons.filter(son => son.genre === genre);\n}\nconst liste_triee = trier(listeSons[1].genre, 'Tribe');\nconsole.log(liste_triee);\nfunction Sons() {\n  _s();\n  const [genreTri, setGenreTri] = useState('');\n  const trierParGenre = (sons, genre) => {\n    return sons.filter(son => son.genre.includes(genre));\n  };\n  const listeSonsTries = genreTri ? trierParGenre(listeSons, genreTri) : listeSons;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Trier par genre:\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setGenreTri(''),\n        children: \"Tous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setGenreTri('Gabber'),\n        children: \"Gabber\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setGenreTri('Hardcore'),\n        children: \"Hardcore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setGenreTri('Tribe'),\n        children: \"Tribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), listeSonsTries.map(son => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: son.img,\n        alt: son.titre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: son.titre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), son.genre && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: son.genre.join(' / ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [son.prix, \"\\u20AC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Sons, \"CVSrXJJF01Mlcd4ph+rOr06q4To=\");\n_c = Sons;\nexport default Sons;\nvar _c;\n$RefreshReg$(_c, \"Sons\");","map":{"version":3,"names":["React","listeSons","jsxDEV","_jsxDEV","trier","sons","genre","filter","son","liste_triee","console","log","Sons","_s","genreTri","setGenreTri","useState","trierParGenre","includes","listeSonsTries","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","className","src","img","alt","titre","join","prix","_c","$RefreshReg$"],"sources":["C:/Users/Pro/Desktop/cours HTML CSS/sitr b2B/shop/src/Sons/Afficher_sons.js"],"sourcesContent":["import React from 'react'\r\n// import ReactPlayer from 'react-player/soundcloud'\r\nimport listeSons from './/listeSons.json'\r\nimport \".//Afficher_sons.css\";\r\n\r\n\r\nfunction trier(sons, genre) {\r\n  return sons.filter((son) => son.genre === genre);\r\n}\r\n\r\nconst liste_triee = trier(listeSons[1].genre, 'Tribe');\r\nconsole.log(liste_triee);\r\n\r\n\r\nfunction Sons() {\r\n  const [genreTri, setGenreTri] = useState('');\r\n\r\n  const trierParGenre = (sons, genre) => {\r\n    return sons.filter((son) => son.genre.includes(genre));\r\n  };\r\n\r\n  const listeSonsTries = genreTri ? trierParGenre(listeSons, genreTri) : listeSons;\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        Trier par genre:\r\n        <button onClick={() => setGenreTri('')}>Tous</button>\r\n        <button onClick={() => setGenreTri('Gabber')}>Gabber</button>\r\n        <button onClick={() => setGenreTri('Hardcore')}>Hardcore</button>\r\n        <button onClick={() => setGenreTri('Tribe')}>Tribe</button>\r\n      </div>\r\n\r\n      {listeSonsTries.map((son) => (\r\n        <div className=\"\">\r\n          <img src={son.img} alt={son.titre} />\r\n          <h2>{son.titre}</h2>\r\n          {son.genre && <h3>{son.genre.join(' / ')}</h3>}\r\n          <span>{son.prix}â‚¬</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n  \r\n  \r\n  export default Sons;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}